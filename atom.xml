<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[#error NO_MONEY]]></title>
  <link href="http://enukane.github.io/atom.xml" rel="self"/>
  <link href="http://enukane.github.io/"/>
  <updated>2015-01-16T19:59:41+09:00</updated>
  <id>http://enukane.github.io/</id>
  <author>
    <name><![CDATA[n_kane]]></name>
    <email><![CDATA[enukane@glenda9.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SIM Freeか否か]]></title>
    <link href="http://enukane.github.io/blog/2015/01/16/simfreeornot/"/>
    <updated>2015-01-16T21:03:33+09:00</updated>
    <id>http://enukane.github.io/blog/2015/01/16/simfreeornot</id>
    <content type="html"><![CDATA[<p>今月がちょうど Softbank の2年縛りが切れる月なのでそろそろどうするか考えてみる.
&ldquo;@vodafone.ne.jp&#8221;なアドレスに執着が無ければ移るかも.</p>

<h3>直近4ヶ月の Softbank 請求金額</h3>

<table>
<thead>
<tr>
<th style="text-align:center;">月</th>
<th style="text-align:right;">1月(計算中)</th>
<th style="text-align:right;">12月</th>
<th style="text-align:right;">11月</th>
<th style="text-align:right;">10月</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">合計</td>
<td style="text-align:right;"> 8232 </td>
<td style="text-align:right;"> 9214 </td>
<td style="text-align:right;"> 9344 </td>
<td style="text-align:right;"> 8847 </td>
</tr>
<tr>
<td style="text-align:center;">基本使用料</td>
<td style="text-align:right;"> 934 </td>
<td style="text-align:right;"> 934 </td>
<td style="text-align:right;"> 934 </td>
<td style="text-align:right;"> 934 </td>
</tr>
<tr>
<td style="text-align:center;">パケット定額料等</td>
<td style="text-align:right;"> 5200 </td>
<td style="text-align:right;"> 5200 </td>
<td style="text-align:right;"> 5200 </td>
<td style="text-align:right;">  5200 </td>
</tr>
<tr>
<td style="text-align:center;">通話料</td>
<td style="text-align:right;"> 400 </td>
<td style="text-align:right;"> 340 </td>
<td style="text-align:right;"> 460 </td>
<td style="text-align:right;"> 0 </td>
</tr>
<tr>
<td style="text-align:center;">オプションサービス料</td>
<td style="text-align:right;"> 1685</td>
<td style="text-align:right;"> 1250 </td>
<td style="text-align:right;"> 1250 </td>
<td style="text-align:right;"> 1250 </td>
</tr>
<tr>
<td style="text-align:center;">その他</td>
<td style="text-align:right;"> 13 </td>
<td style="text-align:right;"> 13 </td>
<td style="text-align:right;"> 13 </td>
<td style="text-align:right;"> 13 </td>
</tr>
<tr>
<td style="text-align:center;">端末台(月月割引き後) </td>
<td style="text-align:right;"> 0 </td>
<td style="text-align:right;">  1018 </td>
<td style="text-align:right;"> 1018 </td>
<td style="text-align:right;"> 1018 </td>
</tr>
<tr>
<td style="text-align:center;"> 消費税 </td>
<td style="text-align:right;">  - </td>
<td style="text-align:right;"> 459 </td>
<td style="text-align:right;"> 469 </td>
<td style="text-align:right;"> 432 </td>
</tr>
<tr>
<td style="text-align:center;"> 通信料 </td>
<td style="text-align:right;"> - </td>
<td style="text-align:right;"> 2.55GB </td>
<td style="text-align:right;"> 5.08GB </td>
<td style="text-align:right;"> 3.23GB</td>
</tr>
</tbody>
</table>


<p>オプションサービス料はこんな感じらしい。削ったつもりだったけど、まだいろいろついてんね。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">月</th>
<th style="text-align:right;"> 2月 </th>
<th style="text-align:right;"> 1月 </th>
<th style="text-align:right;"> 10〜12月 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">合計</td>
<td style="text-align:right;"> 1750 </td>
<td style="text-align:right;"> 1685 </td>
<td style="text-align:right;"> 1250 </td>
</tr>
<tr>
<td style="text-align:center;">S!ベーシックパック(i) </td>
<td style="text-align:right;"> 300 </td>
<td style="text-align:right;"> 300 </td>
<td style="text-align:right;"> 300 </td>
</tr>
<tr>
<td style="text-align:center;">Wi-FIスポット(割引後) </td>
<td style="text-align:right;"> 0 </td>
<td style="text-align:right;"> 0 </td>
<td style="text-align:right;"> 0 </td>
</tr>
<tr>
<td style="text-align:center;">あんしん保証パック(i) </td>
<td style="text-align:right;"> 475 </td>
<td style="text-align:right;"> 475 </td>
<td style="text-align:right;"> 475 </td>
</tr>
<tr>
<td style="text-align:center;">テザリングオプション(割引後) </td>
<td style="text-align:right;"> 500 </td>
<td style="text-align:right;"> 435 </td>
<td style="text-align:right;"> 0 </td>
</tr>
<tr>
<td style="text-align:center;"> iphone基本パック </td>
<td style="text-align:right;"> 475 </td>
<td style="text-align:right;"> 475 </td>
<td style="text-align:right;"> 475 </td>
</tr>
</tbody>
</table>


<p>少なくとも以下のオプションは削れそう。950円のマイナス。</p>

<ul>
<li>iPhone基本パック (475)</li>
<li>あんしん保証パック (475)</li>
</ul>


<p>削ったとして結局のところ1月換算で行くなら,  8232 - 950 + 460 (消費税概算) = 7700ぐらい。
なお、MNP転出手数料は2000円。</p>

<h3>みおふぉんに変えてみるプラン</h3>

<p>とりあえず端末代は度外視するとして。</p>

<ul>
<li>ファミリーシェアプラン 7GB : 2560円/月 (税抜)</li>
<li>SIMカード(一枚目): 音声通話機能付き 700円 (税抜)</li>
<li>SIMカード(二枚目): データ専用 0円(税抜き)</li>
</ul>


<p>初期費用、通話料、ユニバーサルサービス料は含まれてない。音声通話は20円/o.5分(税抜き)とのこと。</p>

<ul>
<li>初期費用: 3000

<ul>
<li>ここに転出手数料 2000</li>
</ul>
</li>
<li>通話料: ソフトバンク側と同じく400円程度とする</li>
<li>ユニバーサルサービス料: 誤差なので含めない</li>
</ul>


<p>これで合計金額を取ると, 月4000円ぐらい？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年のまとめをちらほらと、2015年にやりたいことをだらだらと]]></title>
    <link href="http://enukane.github.io/blog/2015/01/01/newyear/"/>
    <updated>2015-01-01T09:24:55+09:00</updated>
    <id>http://enukane.github.io/blog/2015/01/01/newyear</id>
    <content type="html"><![CDATA[<h1>2014年のまとめ</h1>

<ul>
<li>犬吠埼に初日の出観に行った。寒かった。</li>
<li>C85のデータをまとめて公開した: <a href="http://www.slideshare.net/enukane/comiket-space-29723016">&ldquo;続・ららら、(無線的に)素敵なComiket Space&rdquo;</a></li>
<li>部署名が一昨年のそれに戻った</li>
<li>某文学系イベントでの無線LANネットワーク構築の準備・面倒見その他をした</li>
<li>会社が神保町から飯田橋に引っ越した</li>
<li>ロードバイクかった。2013年に比べるとあんまり乗ってない。</li>
<li>秋山郷ハッカソン行ってきた。成果はない。星空綺麗だった。</li>
<li>夏のコミケで<a href="https://github.com/enukane/c86book">&ldquo;キャプチャリング802.11&rdquo;</a>を出した</li>
<li>C86のデータをまとめて公開した: <a href="http://www.slideshare.net/enukane/comiket-space-c86">続々・ららら、(無線的に)素敵なComiket Space C86</a></li>
<li>某ゲーム系イベントで一部無線LAN周りの面倒見をした</li>
<li>亀有から王子に引っ越した。githubで管理しようと思ってたけどうまくできなかった ( <a href="https://github.com/enukane/HIKKOSHI2014">残骸</a> )</li>
<li>冬コミ落ちて、引越を言い訳に何もしなかった (最終日だけデバイス動かした)</li>
<li>リバウンドしてた (一昨年の体重に戻った)</li>
</ul>


<h1>2015年にやりたいこと</h1>

<ul>
<li>夏コミ(C88)に受かりますように</li>
<li>C87で取ったデータの分析 &amp; まとめ。手法の再検討とC88でのリトライをしたい。</li>
<li>&ldquo;Linuxのブートプロセスをみる&#8221;のPlan 9版を書いてコミケで出したい</li>
<li>9load の EFI対応? とりあえず勉強するところから&hellip;</li>
<li>OSvでNetVM的なことできないか遊んでみる</li>
<li>DPDKで遊びたい</li>
<li>オレオレネットワークツールをきちんとまとめよう</li>
<li>集めたデータ分析の方向の掘り下げ方を考えよう</li>
<li>通信速度その他を図りながらの計測デバイスを作ってみる</li>
<li>Raspberry Piで玄関先カメラシステム作りたい</li>
<li>ネットワーク自動化周りをきちんと自宅に組み込む, 生活で使う</li>
<li>自宅鯖環境の復旧</li>
<li>監視系の作り込みをしよう</li>
<li>こんどこそちゃんと背景透過なグレンダさんステッカーを作る</li>
<li>忍耐を要求しないHTML/JavaScriptというよりWebUIの書き方・常道を勉強する</li>
<li>論文読んだらきちんとまとめと所感を書く習慣をつけよう</li>
<li>手元でてきとーに作ったツールをきちんと見直してどこかに放り込んでおく習慣をつけよう</li>
<li>2016年の初日の出は犬吠埼か九十九里のどこかで観たい</li>
<li>電子書籍になれよう</li>
<li>やせよう ( -15kg )</li>
<li>もっと馬鹿をやろう. Keep it stupid, simple (誤字にあらず)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[システム系論文紹介 Advent Calendar 2014]]></title>
    <link href="http://enukane.github.io/blog/2014/12/12/syspaper-adventcalendar-2014/"/>
    <updated>2014-12-12T09:58:24+09:00</updated>
    <id>http://enukane.github.io/blog/2014/12/12/syspaper-adventcalendar-2014</id>
    <content type="html"><![CDATA[<p>本記事は、<a href="http://www.adventar.org/calendars/440">システム系論文紹介 Advent Calendar 2014</a> 12/11 のための記事です</p>

<h1>はじめに</h1>

<p>本エントリでは、NSDI&#8217;14 にて発表のあった &ldquo;NetVM&rdquo; について紹介します。</p>

<h1>&ldquo;NetVM: High Performance and Flexible Networking Using Virtualization on Commodity Platforms&rdquo;</h1>

<h2>論文の概要</h2>

<ul>
<li>タイトル: <a href="https://www.usenix.org/conference/nsdi14/technical-sessions/presentation/hwang"><em>&ldquo;NetVM: High Performance and Flexible Networking Using Virtualization on Commodity Platforms&rdquo;</em></a></li>
<li>著者: Jinho Hwang et al.</li>
<li>出典: 11th USENIX Symposium on Networked Systems Design and Implementation (NSDI&#8217;14)</li>
</ul>


<p>この論文では表題にも登場する&#8221;Commodity Platforms&#8221;いわゆる普通の(?) x86マシンを使った、高度かつ高速なネットワークサービスを実現するための基盤として、&#8221;NetVM&#8221; というプラットフォームを提案&amp;実装しています。これまでお高い専用のハードウェアでなければ実用に足る性能が出せなかったファイヤーウォールやルーティング、ロードバランサといったネットワークに必要な諸機能。これらをソフトウェアだけで実現し、いわゆる<a href="http://www.etsi.org/technologies-clusters/technologies/nfv">NFV</a> 的なものの基盤として使える様にするといったことを目的としています。特にこの論文では、ハードウェアアプライアンスに負けない性能(==ワイヤーレート)を目指しつつ、ソフトウェアとしての展開の容易さや機能実現に対する柔軟性といったネットワークサービスインフラにおける利便性を実現することを主眼としています。</p>

<h1>ここがひと味違うよNetVM</h1>

<p>ここではNetVMを支える技術、として論文中よりNetVMにおける「こだわり」ポイントをいくつか紹介します。</p>

<h2>Virtualization: 仮想化前提だよ</h2>

<h3>NetVMにおける仮想マシン: 1コンポーネント == 1VM</h3>

<p>NetVMにおける一つの特徴として、仮想化環境によるネットワークサービスの実現を特に意識している点が上げられます。
いわゆるハコモノを用いる一般的なネットワークでは用途に応じて様々なハコを組み合わせてネットワークを構成します。
これにはたとえばスイッチやルータ、ファイヤーウォールなどといったコンポーネントに設定を投入し、間を
LANケーブルで敷設するイメージでしょうか。
ブロードバンドルータなど一つのハコにまとめている場合もありますが、より大規模かつ高速な処理を要求される場合は
専用のアプライアンスを持ってくることが一般的でしょう。</p>

<p>NetVMでは、これらの物理的なハコとしての形を取っ払ってKVM上の仮想マシンを新たな仮想的なハコとしてそこに機能を押し込めています。
これによりソフトウェアの柔軟性(デプロイや変更の自動化、大規模化 etc)といった利点をネットワークの構成に導入しています。</p>

<p>それぞれのVMはハコモノとして、これまで行ってきたのと同じようにパケットの入力とそれに基づく出力の決定(宛先の変更やパケットの書き換えなど)を行います。
もちろん仮想マシンに押し込めたところで物理配線が消える訳ではないのでそれらは依然として存在しますが、このハコモノの間を埋めるLANケーブル
(とスイッチング)の役割の一部をNetVMではハイパバイザでも提供します。NetVMではこのホストで動く部分をNetVM Core, NetVM Managerと呼称しています。
ネットワークコンポーネント間の結線にあたるこの部分もソフトウェアとして抱き込むことで、ハコモノを仮想化したのと同様の利点をネットワーキングにも導入しています。</p>

<h2>VMという区分によるセキュリティ</h2>

<p>一つのハコモノを一つのVMに押し込めて動かすことはセキュリティ面でも利点があります。
NFV的な、一つの物理ハードウェア上に複数のネットワーク、複数のお客さん環境が載っている場合は
それぞれの間がまぜこぜにならないことが肝要です。
KVMが既にVMという区分で提供しているアイソレーションの仕組みに乗っかることでNetVMでは
各ネットワークコンポーネントのセキュリティを担保しています。</p>

<p>加えて必要なのは、それぞれのネットワーク間を間違って繋がないことです。
ここはホストOSつまりNetVM CoreやNetVM Managerの領分になりますが、このためにVMのグルーピングができるようになっています。
これにより、あるVM群は特定のユーザのもの、また別のVM群はそっちのユーザのものといった形で内部的に分離する事が可能です。</p>

<p>なおあくまで内部的な区分けにつき、外に出たフレームは対象とはなりません。このため実際にNFVっぽいことの基盤として使うにはその部分でVLANかますなりトンネリングするなりでネットワーク的に区分けすることが必要だったり？また、一つの物理的なハードウェア上での組み合わせを主眼にしているためか外に出ないといけないような場合の想定があまりなされていない感じもあります。</p>

<h2>High Performance: パケット処理性能↑</h2>

<p>ハードウェアなアプライアンス箱に性能で勝つ、というのを第一目標においているためかチューニングやテクニックの記述に論文のそこそこの部分を割いているためその一部をここでは解説します。</p>

<h3>DPDKで User-land Packet Processing</h3>

<p>いわゆる「ポーリングモード」+ 「ユーザランドにおけるパケット処理」+「バッチ処理」による高速化は、Intel DPDKのリリースやnetmap、あとちょっとマニアックなところだとrump(はどうなんだろう&hellip;?)などの登場によりもはや当たり前のテクニックとなってきました。特に&#8221;なんらかのアプリケーション&#8221;に特化した通信を行いたい場合は、これまで先人がせっせと築き上げてきたOSのレイヤやらコンテキストスイッチングによるオーバヘッドをぶち抜けるため非常に高速にパケットを処理することが可能です。</p>

<p>これらの仕組みはDPDKでもnetmapでも、基本的には直接ハードウェア(NIC)を触ってる人のみへの恩恵です。一方、NetVMではベースにDPDKを用いることでこれらの技術を利用しつつ、ネットワークサービスのコンポーネントたるVMの中のアプリケーションに対しても同様の利点を提供しています。</p>

<h3>システム全体でのパケットバッファ共有</h3>

<p>DPDKやnetmapは基本的に、NICとネットワークアプリケーションとで送受信リングとパケットバッファを共有することでコピーコストの削減を行っています。
NetVMでもDPDKを利用しているため、ホストOSとNICとの間でこれはすでになされていますがこの構造をさらに拡張し、VMにたいしても
同様の処理ができるように巨大な共有メモリ領域を用意し、ダミーのvirtual PCIデバイス経由でVMに対してこれを晒しています。
これによりNIC-ホストOS-VMの三者間でのZero Copyを実現しています。
このZero CopyはVM-VM間でも有効であり、ホストOS(NetVM Core)を通してのコンポーネント間のパケットのやりとりにあたっても
同様の恩恵を得ることができます。これは、ホスト-VM間のRx/Txリングがそれぞれ独立である一方で&#8221;同じネットワーク&#8221;間では
パケットバッファが共有されているためです。なお先に述べたネットワーク間のアイソレーション機能(グルーピング)は
このパケットバッファの共有範囲を分けることでも実現されています。</p>

<h3>CPU特性の活用</h3>

<p>バッファ共有によるZero Copyの拡張に加えて、マルチコアシステムを前提として以下の工夫がなされています。</p>

<ul>
<li>Lockless なシステムデザイン</li>
<li>NUMA-awareなデザイン</li>
</ul>


<p>netmapでも同様だったかと思いますが(マルチコアの場合はどうだったっけ&hellip;)、共有のパケットバッファの操作にあたりNetVMではロックを用いません。
あるキュー(Rx/Tx)は同時にホスト内またはゲストから操作しないように構成されます(できないのではなくやらない)。
ある一つのキューに対してロックが必要なケースは以下の場合です。</p>

<ol>
<li>ホストOS側でそれぞれのコアが同じキューを触ることがある場合</li>
<li>ゲストOSとホストOSが同じキューを触ることがある場合</li>
</ol>


<p>これらを避けるために、NetVMではコア間で触るキューを分けるようになっています。
まずNetVMのホストOS側ではコアごとにNICおよびVMとのキューを分けるようになっています。
これにより1の、同じキューを別々のコア(上で動作するスレッド)が触ることがないようにしています。
次に、ゲストOS(VM)側のスレッドとホストOS側のスレッドが同じキューを操作するシチュエーション(2)ですが、
これも1と同様にあるゲストOS(VM)上のスレッドが動くCPUを限定することで対処しています。
このゲスト上のスレッドも、同様に自分のCPUに割り当てられたキューしか触れないようにすることで実質的に
いわゆるキューを挟んだconsumer-producerにおいてRX側では「ホストOSのスレッドとしてキューにpush」と
「VM上のスレッドとしてキューからpop」が一つのCPUで完結することになります(これらは1つのCPU上では同時に実行されないためロックもいらない)。
このあたりの実装にはKVMのvCPU周りの管理機構をいじくって実現したとのこと。</p>

<p>NetVMではNUMAなマルチコアシステムにおけるメモリの距離とキャッシュの扱いについても考慮が入っています。
基本的なデザインとして、NetVMでは自分のコアに距離的に近いメモリ領域以外は触らないように構成されています
(遠いメモリにアクセスするとキャッシュは汚れるは遠いわで良くないよというお話はここでは割愛)。
これは上記の「キューごとのコア」という構造をベースに作られます。
まずNetVMではそれぞれのコアごとに触るメモリ領域を分けます (総メモリ量/コア数 == 1つのコアが触るメモリ領域)。
そしてその各々のメモリ領域に「キューごとのコア」が作られ、ゲスト(VM)と共有されます。
先に述べたように、Locklessデザインの制約によりあるキューはそれぞれ対応するCPUからしかアクセスされないため、
あるCPU(とその上で動くホスト/ゲスト上のスレッド)は常に自分から近いメモリ領域のみを触る様になります。
これは全てのホスト-ゲスト間のみならず、ゲスト-ゲスト間でのパケットのやりとりでも有効であり、最終的に
NICにパケットを引き渡すまでlocalityを維持したまま通信ができるようになります。</p>

<h1>終わりに</h1>

<p>ここではNSDI&#8217;14より&#8221;NetVM&#8221;の紹介をしました。こういったNFV的なプラットフォームはネットワークベンダやキャリアなど各社それぞれ様々な構想を出しており、それらの一例として作り方まで踏み込んだものとして面白い論文ですが、なによりもチューニングに結構命かけているあたりがこのNetVMの面白いところです。</p>

<h2>今回ボツになった他の候補者達</h2>

<p>最後に、今回読もうと思ってた論文の候補たちを並べておきます。</p>

<ol>
<li>Unikernels: Library Operating Systems for the Cloud (ATC&#8217;13)</li>
<li>HACK: Hierarchical ACKs for Efﬁcient Wireless Medium Utilization (ATC&#8217;14)</li>
<li>Hyper-Switch: A Scalable Software Virtual Switching Architecture (ATC&#8217;13)</li>
<li>Rekindling Network Protocol Innovation with User-Level Stacks (SIGCOMM Computer Communication Review)</li>
</ol>


<p>Unikernelsは@suma90h さんが既にシステム系論文輪読会で<a href="http://www.slideshare.net/suma_/reading-unikernels">お読みになってた</a> のでパス。HACKは、無線LAN系 &amp; 今年のATCでのBest Paperということもあって気になっているのですが別枠で読むことに。3や4は、NetVMと同じく&#8221;えすでーえぬ&#8221;とか&#8221;えぬえふぶい&#8221;といった類いに属しそうなのと、先日のIIJ-II セミナーで&#8221;ClickOS and the Art of Network Function Virtualization&#8221;のお話があったので関連文献として上げてみました。</p>
]]></content>
  </entry>
  
</feed>
